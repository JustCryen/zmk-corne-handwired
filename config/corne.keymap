/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { flavor = "tap-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <9 10>;
        };
    };

    behaviors {
        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mods Left";
            bindings = <&kp>, <&trans>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            hold-trigger-on-release;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mods Right";
            bindings = <&kp>, <&trans>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  \   |
            //                    | LALT| LWR | SPC |   | BSPC| RSE  | RALT|

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y          &kp U  &kp I      &kp O    &kp P     &kp RET
&kp LSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H          &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                         &kp LALT  &sl 1  &kp SPACE    &kp BACKSPACE  &sl 2  &kp RALT
            >;
        };

        lower_layer {
            display-name = "Lower";

            // -----------------------------------------------------------------------------------------
            // |GRESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // |      |BTCLR| BT0 | BT1 | BT2 | BOOT|   | BOOT|     |     |     |     |      |
            //                    | GUI |     |     |   |     |     |     |

            bindings = <
&gresc  &kp N1      &kp N2        &kp N3        &kp N4        &kp N5         &kp N6       &kp N7    &kp N8  &kp N9     &kp N0  &trans
&trans  &trans      &trans        &trans        &trans        &trans         &kp LEFT     &kp DOWN  &kp UP  &kp RIGHT  &none   &none
&trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &out OUT_TOG  &bootloader    &bootloader  &none     &none   &none      &none   &none
                                  &kp LGUI      &trans        &trans         &trans       &trans    &trans
            >;

            label = "Lowered";
        };

        raise_layer {
            display-name = "Raised";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  +  |  7  |  8  |  9  |  )  |      |
            // | SHFT |     |     |     |     |     |   |  -  |  4  |  5  |  6  |  \  |  `   |
            // | CTRL |     |     |     |     |     |   |  0  |  1  |  2  |  3  |  |  |  ~   |
            //                    |     |     |     |   | DEL |     |     |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp EQUAL                   &mt F7 KP_NUMBER_7  &mt F8 KP_NUMBER_8  &mt F9 KP_NUMBER_9  &mt F10 RPAR  &trans
&trans  &none     &none   &none     &none     &none        &kp MINUS                   &mt F4 KP_NUMBER_4  &mt F5 KP_NUMBER_5  &mt F6 KP_NUMBER_6  &mt F11 BSLH  &kp GRAVE
&trans  &none     &none   &none     &none     &none        &mt KP_NUMLOCK KP_NUMBER_0  &mt F1 KP_NUMBER_1  &mt F2 KP_NUMBER_2  &mt F3 KP_NUMBER_3  &mt F12 PIPE  &kp TILDE
                          &trans    &trans    &trans       &kp DELETE                  &trans              &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans  &none  &none  &none   &none           &kp LESS_THAN           &kp GREATER_THAN       &none            &none   &none  &none  &trans
&trans  &none  &none  &none   &kp LEFT_BRACE  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &none   &none  &none  &none
&trans  &none  &none  &none   &none           &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &none            &none   &none  &none  &none
                      &trans  &trans          &trans                  &trans                 &trans           &trans
            >;

            label = "Adjust";
        };

        home_row_mods {
            bindings = <
&trans  &trans         &trans          &trans           &trans         &trans    &trans  &trans         &trans           &trans          &trans         &trans
&trans  &hrm_l LGUI 0  &hrm_l LCTRL 0  &hrm_l LSHIFT 0  &hrm_l LALT 0  &trans    &trans  &hrm_r RALT 0  &hrm_r RSHIFT 0  &hrm_r RCTRL 0  &hrm_r RGUI 0  &trans
&trans  &trans         &trans          &trans           &trans         &trans    &trans  &trans         &trans           &trans          &trans         &trans
                                       &trans           &trans         &trans    &trans  &trans         &trans
            >;

            label = "Home Row Mods";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        HRM_Base_toggle {
            if-layers = <0>;
            then-layer = <4>;
        };

        Adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
